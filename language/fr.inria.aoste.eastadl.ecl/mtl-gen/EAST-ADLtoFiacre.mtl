[comment encoding = UTF-8 /]

[module generate('http://fr.inria.aoste.timemodel.ccslmodel.clockexpressionandrelation', 
	'http://www.eclipse.org/emf/2002/Ecore', 
	'http://org.gemoc.moccml/1.0', 
	'http://fr.inria.aoste.timemodel',
	'http://org.gemoc.moccml.fsmmodel/1.0',
	'http://www.eclipse.org/xtend', 
	'http://www.eclipse.org/xtend/RichString', 
	'http://www.eclipse.org/xtext/xbase/Xbase',
	'http://east-adl.info/2.1.10/eastadl21/east_adl/structure/systemmodeling','http://east-adl.info/2.1.10/eastadl21','http://east-adl.info/2.1.10/eastadl21/east_adl/infrastructure/elements','http://east-adl.info/2.1.10/eastadl21/east_adl/structure/functionmodeling','http://east-adl.info/2.1.10/eastadl21/east_adl/behavior','http://east-adl.info/2.1.10/eastadl21/east_adl/timing','http://east-adl.info/2.1.10/eastadl21/east_adl/timing/timingconstraints') ]
[template public generate(aSystemModel : SystemModel)]
[comment @main/]
[file (aSystemModel.name+'_FiacreProcess.fcr', false, 'UTF-8')]
// *********************** Type Declaration ******************************/



process pUnConstrainedSemantics['['/][']'/] is
	states s0

[file ('pUnConstrainedSemantics.fcr', false, 'UTF-8')]
process pUnConstrainedSemantics['['/][']'/] is
	
	states s0
[/file]
/******************** Process Parallelization for SystemModel******************/
component sys is

var 
	global : SystemDataRoot,
    ID: int := 0
	//global : SystemDataRoot := INITIAL_Configuration

port


par

pUnConstrainedSemantics['['/][']'/]
end par
sys 



process pUnConstrainedSemantics['['/][']'/] is
	states s0

[file ('pUnConstrainedSemantics.fcr', false, 'UTF-8')]
process pUnConstrainedSemantics['['/][']'/] is
	
	states s0
[/file]
/******************** Process Parallelization for SystemModel******************/
component sys is

var 
	global : SystemDataRoot,
    ID: int := 0
	//global : SystemDataRoot := INITIAL_Configuration

port


par

pUnConstrainedSemantics['['/][']'/]
end par
sys 



/*********************************************************************
Defining the Functions for : EAPackage
**********************************************************************/
process pUnConstrainedSemantics['['/][for (element : EAPackage| aSystemModel.eAllContents(EAPackage))]
[element.name/]_globalTime:out none,[/for][']'/] is
	states s0
[for (element : EAPackage| aSystemModel.eAllContents(EAPackage))]
    from s0  [element.name/]_globalTime;  to s0

[/for]

[file ('pUnConstrainedSemantics.fcr', false, 'UTF-8')]
process pUnConstrainedSemantics['['/][for (element : EAPackage| aSystemModel.eAllContents(EAPackage))]
[element.name/]_globalTime:out none,[/for][']'/] is
	
	states s0
[for (element : EAPackage| aSystemModel.eAllContents(EAPackage))]
    from s0  [element.name/]_globalTime;  to s0

[/for]
[/file]
/******************** Process Parallelization for SystemModel******************/
component sys is

var 
	global : SystemDataRoot,
    ID: int := 0
	//global : SystemDataRoot := INITIAL_Configuration

port
[for (element : EAPackage| aSystemModel.eAllContents(EAPackage))]
[element.name/]_globalTime: none,
[/for]

par

pUnConstrainedSemantics['['/][for (element : EAPackage| aSystemModel.eAllContents(EAPackage))]
[element.name/]_globalTime,[/for][']'/]
[for (element : EAPackage| aSystemModel.eAllContents(EAPackage))]
|| p[element.name/] ['['/][element.name/]_globalTime[']'/] (&global, ID)
[/for]
end par
sys 



/*********************************************************************
Defining the Functions for : FunctionPrototype
**********************************************************************/
/*********************************************************************
Defining the Functions for : FunctionPortProxy
**********************************************************************/
/************************* FunctionPrototype Process Instances***************************/
[for (element : FunctionPrototype| aSystemModel.eAllContents(FunctionPrototype))]
process p[element.name/] ['['/][element.name/]_start:in none,[element.name/]_finish:in none[']'/](&global : SystemDataRoot, id : read int) is
	states s0
	var _self:FunctionPrototype
    from s0  [element.name/]_start; global:=FunctionPrototype_start( global , global.refToElement_id) ;  to s0
    from s0  [element.name/]_finish; global:=FunctionPrototype_stop( global , global.refToElement_id) ;  to s0
[/for]
/************************* FunctionPortProxy Process Instances***************************/
[for (element : FunctionPortProxy| aSystemModel.eAllContents(FunctionPortProxy))]
process p[element.name/] ['['/][element.name/]_read:in none,[element.name/]_write:in none[']'/](&global : SystemDataRoot, id : read int) is
	states s0
	var _self:FunctionPortProxy
    from s0  [element.name/]_read; global:=FunctionPortProxy_read( global , global.refToElement_id) ;  to s0
    from s0  [element.name/]_write; global:=FunctionPortProxy_write( global , global.refToElement_id) ;  to s0
[/for]
process pUnConstrainedSemantics['['/][for (element : FunctionPrototype| aSystemModel.eAllContents(FunctionPrototype))]
[element.name/]_start:out none,[element.name/]_finish:out none,[/for][for (element : FunctionPortProxy| aSystemModel.eAllContents(FunctionPortProxy))]
[element.name/]_read:out none,[element.name/]_write:out none,[/for][']'/] is
	states s0
[for (element : FunctionPrototype| aSystemModel.eAllContents(FunctionPrototype))]
    from s0  [element.name/]_start;  to s0
    from s0  [element.name/]_finish;  to s0

[/for]
[for (element : FunctionPortProxy| aSystemModel.eAllContents(FunctionPortProxy))]
    from s0  [element.name/]_read;  to s0
    from s0  [element.name/]_write;  to s0

[/for]

[file ('pUnConstrainedSemantics.fcr', false, 'UTF-8')]
process pUnConstrainedSemantics['['/][for (element : FunctionPrototype| aSystemModel.eAllContents(FunctionPrototype))]
[element.name/]_start:out none,[element.name/]_finish:out none,[/for][for (element : FunctionPortProxy| aSystemModel.eAllContents(FunctionPortProxy))]
[element.name/]_read:out none,[element.name/]_write:out none,[/for][']'/] is
	
	states s0
[for (element : FunctionPrototype| aSystemModel.eAllContents(FunctionPrototype))]
    from s0  [element.name/]_start;  to s0
    from s0  [element.name/]_finish;  to s0

[/for]
[for (element : FunctionPortProxy| aSystemModel.eAllContents(FunctionPortProxy))]
    from s0  [element.name/]_read;  to s0
    from s0  [element.name/]_write;  to s0

[/for]
[/file]
/******************** Process Parallelization for SystemModel******************/
component sys is

var 
	global : SystemDataRoot,
    ID: int := 0
	//global : SystemDataRoot := INITIAL_Configuration

port
[for (element : FunctionPrototype| aSystemModel.eAllContents(FunctionPrototype))]
[element.name/]_start: none,[element.name/]_finish: none,

[/for][for (element : FunctionPortProxy| aSystemModel.eAllContents(FunctionPortProxy))]
[element.name/]_read: none,[element.name/]_write: none,
[/for]

par

pUnConstrainedSemantics['['/][for (element : FunctionPrototype| aSystemModel.eAllContents(FunctionPrototype))]
[element.name/]_start,[element.name/]_finish,[/for][for (element : FunctionPortProxy| aSystemModel.eAllContents(FunctionPortProxy))]
[element.name/]_read,[element.name/]_write,[/for][']'/]
[for (element : FunctionPrototype| aSystemModel.eAllContents(FunctionPrototype))]
|| p[element.name/] ['['/][element.name/]_start,[element.name/]_finish[']'/] (&global, ID)
[/for]
[for (element : FunctionPortProxy| aSystemModel.eAllContents(FunctionPortProxy))]
|| p[element.name/] ['['/][element.name/]_read,[element.name/]_write[']'/] (&global, ID)
[/for]
end par
sys 
const NUMBER_Behaviors : int is [aSystemModel.eAllContents(Behavior)->size()/]
const NUMBER_Modes : int is [aSystemModel.eAllContents(Mode)->size()/]
const NUMBER_ModeGroups : int is [aSystemModel.eAllContents(ModeGroup)->size()/]
const NUMBER_FunctionBehaviors : int is [aSystemModel.eAllContents(FunctionBehavior)->size()/]
const NUMBER_FunctionTriggers : int is [aSystemModel.eAllContents(FunctionTrigger)->size()/]

type ModeGroup_modeGroupArray is array [Behavior.eContents(ModeGroup)->size()/] of int
type FunctionBehavior_behaviorArray is array [Behavior.eContents(FunctionBehavior)->size()/] of int
type FunctionTrigger_functionTriggerArray is array [Behavior.eContents(FunctionTrigger)->size()/] of int
type Mode_modeArray is array [ModeGroup.eContents(Mode)->size()/] of int
type Mode_modeArray is array [FunctionBehavior.eContents(Mode)->size()/] of int
type Mode_modeArray is array [FunctionTrigger.eContents(Mode)->size()/] of int
type OrderedSet(eastadl21_east_adl_structure_functionmodeling_FunctionPort_portArray is array [FunctionTrigger.eContents(OrderedSet(eastadl21::east_adl::structure::functionmodeling::FunctionPort)->size()/] of int


/*********************************************************************
Defining the Functions for : FunctionTrigger
**********************************************************************/
process pUnConstrainedSemantics['['/][for (element : FunctionTrigger| aSystemModel.eAllContents(FunctionTrigger))]
[/for][']'/] is
	states s0
[for (element : FunctionTrigger| aSystemModel.eAllContents(FunctionTrigger))]

[/for]

[file ('pUnConstrainedSemantics.fcr', false, 'UTF-8')]
process pUnConstrainedSemantics['['/][for (element : FunctionTrigger| aSystemModel.eAllContents(FunctionTrigger))]
[/for][']'/] is
	
	states s0
[for (element : FunctionTrigger| aSystemModel.eAllContents(FunctionTrigger))]

[/for]
[/file]
/******************** Process Parallelization for SystemModel******************/
component sys is

var 
	global : SystemDataRoot,
    ID: int := 0
	//global : SystemDataRoot := INITIAL_Configuration

port
[for (element : FunctionTrigger| aSystemModel.eAllContents(FunctionTrigger))]

[/for]

par

pUnConstrainedSemantics['['/][for (element : FunctionTrigger| aSystemModel.eAllContents(FunctionTrigger))]
,[/for][']'/]
[for (element : FunctionTrigger| aSystemModel.eAllContents(FunctionTrigger))]
|| p[element.name/] ['['/][']'/] (&global, ID)
[/for]
end par
sys 



/*********************************************************************
Defining the Functions for : ExecutionTimeConstraint
**********************************************************************/
process pUnConstrainedSemantics['['/][for (element : ExecutionTimeConstraint| aSystemModel.eAllContents(ExecutionTimeConstraint))]
[/for][']'/] is
	states s0
[for (element : ExecutionTimeConstraint| aSystemModel.eAllContents(ExecutionTimeConstraint))]

[/for]

[file ('pUnConstrainedSemantics.fcr', false, 'UTF-8')]
process pUnConstrainedSemantics['['/][for (element : ExecutionTimeConstraint| aSystemModel.eAllContents(ExecutionTimeConstraint))]
[/for][']'/] is
	
	states s0
[for (element : ExecutionTimeConstraint| aSystemModel.eAllContents(ExecutionTimeConstraint))]

[/for]
[/file]
/******************** Process Parallelization for SystemModel******************/
component sys is

var 
	global : SystemDataRoot,
    ID: int := 0
	//global : SystemDataRoot := INITIAL_Configuration

port
[for (element : ExecutionTimeConstraint| aSystemModel.eAllContents(ExecutionTimeConstraint))]

[/for]

par

pUnConstrainedSemantics['['/][for (element : ExecutionTimeConstraint| aSystemModel.eAllContents(ExecutionTimeConstraint))]
,[/for][']'/]
[for (element : ExecutionTimeConstraint| aSystemModel.eAllContents(ExecutionTimeConstraint))]
|| p[element.name/] ['['/][']'/] (&global, ID)
[/for]
end par
sys 
const NUMBER_ArbitraryEventConstraints : int is [aSystemModel.eAllContents(ArbitraryEventConstraint)->size()/]
const NUMBER_EventConstraints : int is [aSystemModel.eAllContents(EventConstraint)->size()/]
const NUMBER_PatternEventConstraints : int is [aSystemModel.eAllContents(PatternEventConstraint)->size()/]
const NUMBER_PeriodicEventConstraints : int is [aSystemModel.eAllContents(PeriodicEventConstraint)->size()/]
const NUMBER_SporadicEventConstraints : int is [aSystemModel.eAllContents(SporadicEventConstraint)->size()/]
const NUMBER_AgeTimingConstraints : int is [aSystemModel.eAllContents(AgeTimingConstraint)->size()/]
const NUMBER_DelayConstraints : int is [aSystemModel.eAllContents(DelayConstraint)->size()/]
const NUMBER_InputSynchronizationConstraints : int is [aSystemModel.eAllContents(InputSynchronizationConstraint)->size()/]
const NUMBER_OutputSynchronizationConstraints : int is [aSystemModel.eAllContents(OutputSynchronizationConstraint)->size()/]
const NUMBER_ReactionConstraints : int is [aSystemModel.eAllContents(ReactionConstraint)->size()/]

type OrderedSet(eastadl21_east_adl_timing_TimeDuration_minimumInterArrivalTimeArray is array [ArbitraryEventConstraint.eContents(OrderedSet(eastadl21::east_adl::timing::TimeDuration)->size()/] of int
type OrderedSet(eastadl21_east_adl_timing_TimeDuration_maximumInterArrivalTimeArray is array [ArbitraryEventConstraint.eContents(OrderedSet(eastadl21::east_adl::timing::TimeDuration)->size()/] of int
type OrderedSet(eastadl21_east_adl_timing_TimeDuration_occurrenceArray is array [PatternEventConstraint.eContents(OrderedSet(eastadl21::east_adl::timing::TimeDuration)->size()/] of int


/*********************************************************************
Defining the Functions for : ReactionConstraint
**********************************************************************/
process pUnConstrainedSemantics['['/][for (element : ReactionConstraint| aSystemModel.eAllContents(ReactionConstraint))]
[/for][']'/] is
	states s0
[for (element : ReactionConstraint| aSystemModel.eAllContents(ReactionConstraint))]

[/for]

[file ('pUnConstrainedSemantics.fcr', false, 'UTF-8')]
process pUnConstrainedSemantics['['/][for (element : ReactionConstraint| aSystemModel.eAllContents(ReactionConstraint))]
[/for][']'/] is
	
	states s0
[for (element : ReactionConstraint| aSystemModel.eAllContents(ReactionConstraint))]

[/for]
[/file]
/******************** Process Parallelization for SystemModel******************/
component sys is

var 
	global : SystemDataRoot,
    ID: int := 0
	//global : SystemDataRoot := INITIAL_Configuration

port
[for (element : ReactionConstraint| aSystemModel.eAllContents(ReactionConstraint))]

[/for]

par

pUnConstrainedSemantics['['/][for (element : ReactionConstraint| aSystemModel.eAllContents(ReactionConstraint))]
,[/for][']'/]
[for (element : ReactionConstraint| aSystemModel.eAllContents(ReactionConstraint))]
|| p[element.name/] ['['/][']'/] (&global, ID)
[/for]
end par
sys 
[/file]
[/template]
